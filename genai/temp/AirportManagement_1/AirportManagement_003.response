{
    "models": [
        {
            "classname": "Airport",
            "code": "class Airport(Base):\n    __tablename__ = 'airport'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String(100))\n    location = Column(String(100))\n\n    \"\"\"description: Table for storing airport details such as name and location.\"\"\"",
            "description": "Table for storing airport details such as name and location.",
            "name": "airport"
        },
        {
            "classname": "Airplane",
            "code": "class Airplane(Base):\n    __tablename__ = 'airplane'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    model = Column(String(100))\n    seating_capacity = Column(Integer)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n\n    \"\"\"description: Table for storing airplane details, including model and seating capacity, associated with an airport.\"\"\"",
            "description": "Table for storing airplane details, including model and seating capacity, associated with an airport.",
            "name": "airplane"
        },
        {
            "classname": "Flight",
            "code": "class Flight(Base):\n    __tablename__ = 'flight'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_number = Column(String(10))\n    departure_time = Column(DateTime)\n    arrival_time = Column(DateTime)\n    airplane_id = Column(Integer, ForeignKey('airplane.id'))\n\n    \"\"\"description: Table for storing flight details, including flight number, departure, and arrival times, associated with an airplane.\"\"\"",
            "description": "Table for storing flight details, including flight number, departure, and arrival times, associated with an airplane.",
            "name": "flight"
        },
        {
            "classname": "Passenger",
            "code": "class Passenger(Base):\n    __tablename__ = 'passenger'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    first_name = Column(String(50))\n    last_name = Column(String(50))\n    email = Column(String(100))\n\n    \"\"\"description: Table for storing passenger personal details such as name and email.\"\"\"",
            "description": "Table for storing passenger personal details such as name and email.",
            "name": "passenger"
        },
        {
            "classname": "Booking",
            "code": "class Booking(Base):\n    __tablename__ = 'booking'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    passenger_id = Column(Integer, ForeignKey('passenger.id'))\n    seat_number = Column(String(5))\n\n    \"\"\"description: Table for storing booking information, linking passengers to flights and including seat assignments.\"\"\"",
            "description": "Table for storing booking information, linking passengers to flights and including seat assignments.",
            "name": "booking"
        },
        {
            "classname": "Baggage",
            "code": "class Baggage(Base):\n    __tablename__ = 'baggage'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    weight = Column(Integer)\n    booking_id = Column(Integer, ForeignKey('booking.id'))\n\n    \"\"\"description: Table for storing baggage details such as weight, associated with a booking.\"\"\"",
            "description": "Table for storing baggage details such as weight, associated with a booking.",
            "name": "baggage"
        },
        {
            "classname": "CrewMember",
            "code": "class CrewMember(Base):\n    __tablename__ = 'crew_member'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    first_name = Column(String(50))\n    last_name = Column(String(50))\n    role = Column(String(50))\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n\n    \"\"\"description: Table for storing crew member details, including name, role, and associated flight.\"\"\"",
            "description": "Table for storing crew member details, including name, role, and associated flight.",
            "name": "crew_member"
        },
        {
            "classname": "Maintenance",
            "code": "class Maintenance(Base):\n    __tablename__ = 'maintenance'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    airplane_id = Column(Integer, ForeignKey('airplane.id'))\n    date = Column(DateTime)\n    description = Column(String(200))\n\n    \"\"\"description: Table for storing maintenance records for airplanes, including date and description of maintenance work.\"\"\"",
            "description": "Table for storing maintenance records for airplanes, including date and description of maintenance work.",
            "name": "maintenance"
        },
        {
            "classname": "FoodService",
            "code": "class FoodService(Base):\n    __tablename__ = 'food_service'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    meal_type = Column(String(50))\n    description = Column(String(200))\n\n    \"\"\"description: Table for storing food service details provided on flights, including type and description.\"\"\"",
            "description": "Table for storing food service details provided on flights, including type and description.",
            "name": "food_service"
        },
        {
            "classname": "TicketAgent",
            "code": "class TicketAgent(Base):\n    __tablename__ = 'ticket_agent'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    first_name = Column(String(50))\n    last_name = Column(String(50))\n    agency_name = Column(String(100))\n\n    \"\"\"description: Table for storing ticket agent details including name and associated agency.\"\"\"",
            "description": "Table for storing ticket agent details including name and associated agency.",
            "name": "ticket_agent"
        },
        {
            "classname": "Reservation",
            "code": "class Reservation(Base):\n    __tablename__ = 'reservation'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    passenger_id = Column(Integer, ForeignKey('passenger.id'))\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    ticket_agent_id = Column(Integer, ForeignKey('ticket_agent.id'))\n\n    \"\"\"description: Table for storing reservation details, linking passengers, flights, and ticket agents.\"\"\"",
            "description": "Table for storing reservation details, linking passengers, flights, and ticket agents.",
            "name": "reservation"
        },
        {
            "classname": "AirplaneType",
            "code": "class AirplaneType(Base):\n    __tablename__ = 'airplane_type'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    model_name = Column(String(100))\n    manufacturer = Column(String(100))\n\n    \"\"\"description: Table for storing airplane type details including model name and manufacturer.\"\"\"",
            "description": "Table for storing airplane type details including model name and manufacturer.",
            "name": "airplane_type"
        }
    ],
    "rules": [],
    "test_data": "test_data = \"\"\"\nfrom datetime import datetime, date\n\nairport1 = Airport(name='John F. Kennedy International', location='New York, NY')\nairport2 = Airport(name='Los Angeles International', location='Los Angeles, CA')\nairport3 = Airport(name='Heathrow', location='London, UK')\nairport4 = Airport(name='Haneda', location='Tokyo, JP')\n\nairplane1 = Airplane(model='Boeing 737', seating_capacity=180, airport_id=1)\nairplane2 = Airplane(model='Airbus A320', seating_capacity=150, airport_id=2)\nairplane3 = Airplane(model='Boeing 777', seating_capacity=300, airport_id=3)\nairplane4 = Airplane(model='Airbus A380', seating_capacity=500, airport_id=4)\n\nflight1 = Flight(flight_number='AA100', departure_time=datetime(2023, 1, 15, 6, 0), arrival_time=datetime(2023, 1, 15, 12, 0), airplane_id=1)\nflight2 = Flight(flight_number='BA200', departure_time=datetime(2023, 1, 15, 14, 0), arrival_time=datetime(2023, 1, 15, 20, 0), airplane_id=2)\nflight3 = Flight(flight_number='DL300', departure_time=datetime(2023, 1, 16, 8, 0), arrival_time=datetime(2023, 1, 16, 14, 0), airplane_id=3)\nflight4 = Flight(flight_number='UA400', departure_time=datetime(2023, 1, 17, 10, 0), arrival_time=datetime(2023, 1, 17, 16, 0), airplane_id=4)\n\npassenger1 = Passenger(first_name='John', last_name='Doe', email='john.doe@example.com')\npassenger2 = Passenger(first_name='Jane', last_name='Smith', email='jane.smith@example.com')\npassenger3 = Passenger(first_name='Alice', last_name='Johnson', email='alice.johnson@example.com')\npassenger4 = Passenger(first_name='Bob', last_name='Brown', email='bob.brown@example.com')\n\nbooking1 = Booking(flight_id=1, passenger_id=1, seat_number='12A')\nbooking2 = Booking(flight_id=2, passenger_id=2, seat_number='7B')\nbooking3 = Booking(flight_id=3, passenger_id=3, seat_number='14C')\nbooking4 = Booking(flight_id=4, passenger_id=4, seat_number='1D')\n\nbaggage1 = Baggage(weight=20, booking_id=1)\nbaggage2 = Baggage(weight=25, booking_id=2)\nbaggage3 = Baggage(weight=18, booking_id=3)\nbaggage4 = Baggage(weight=22, booking_id=4)\n\ncrew_member1 = CrewMember(first_name='Mike', last_name='Clark', role='Pilot', flight_id=1)\ncrew_member2 = CrewMember(first_name='Sophie', last_name='Turner', role='Co-Pilot', flight_id=2)\ncrew_member3 = CrewMember(first_name='Kate', last_name='Williams', role='Flight Attendant', flight_id=3)\ncrew_member4 = CrewMember(first_name='James', last_name='Taylor', role='Engineer', flight_id=4)\n\nmaintenance1 = Maintenance(airplane_id=1, date=datetime(2023, 1, 10, 9, 0), description='Engine Check')\nmaintenance2 = Maintenance(airplane_id=2, date=datetime(2023, 1, 11, 10, 0), description='Wheel Inspection')\nmaintenance3 = Maintenance(airplane_id=3, date=datetime(2023, 1, 12, 11, 0), description='Fuselage Repair')\nmaintenance4 = Maintenance(airplane_id=4, date=datetime(2023, 1, 13, 12, 0), description='Avionics Update')\n\nfood_service1 = FoodService(flight_id=1, meal_type='Breakfast', description='Continental Breakfast')\nfood_service2 = FoodService(flight_id=2, meal_type='Lunch', description='Chicken and Vegetables')\nfood_service3 = FoodService(flight_id=3, meal_type='Dinner', description='Beef and Potatoes')\nfood_service4 = FoodService(flight_id=4, meal_type='Snack', description='Fruit and Cheese Plate')\n\nticket_agent1 = TicketAgent(first_name='Paul', last_name='Walker', agency_name='Travel Experts')\nticket_agent2 = TicketAgent(first_name='Emma', last_name='Stone', agency_name='Flight Network')\nticket_agent3 = TicketAgent(first_name='Robert', last_name='Downey Jr.', agency_name='Sky Miles')\nticket_agent4 = TicketAgent(first_name='Jennifer', last_name='Lawrence', agency_name='Air Pioneers')\n\nreservation1 = Reservation(passenger_id=1, flight_id=1, ticket_agent_id=1)\nreservation2 = Reservation(passenger_id=2, flight_id=2, ticket_agent_id=2)\nreservation3 = Reservation(passenger_id=3, flight_id=3, ticket_agent_id=3)\nreservation4 = Reservation(passenger_id=4, flight_id=4, ticket_agent_id=4)\n\nairplane_type1 = AirplaneType(model_name='737-900', manufacturer='Boeing')\nairplane_type2 = AirplaneType(model_name='A321', manufacturer='Airbus')\nairplane_type3 = AirplaneType(model_name='787 Dreamliner', manufacturer='Boeing')\nairplane_type4 = AirplaneType(model_name='A380', manufacturer='Airbus')\n\"\"\"",
    "name": "AirportManagement"
}